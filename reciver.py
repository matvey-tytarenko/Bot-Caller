import pystray
from PIL import Image
import threading
import requests
import time
import widget  # –º–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–∫–Ω–æ
from playsound import playsound as ps

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∫–æ–Ω–∫—É
img = Image.open("wheelchair.png")

# URL —Å–µ—Ä–≤–µ—Ä–∞
SERVER_URL = "https://bot-caller-nine.vercel.app/"

# –§–æ–Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
def get_server_data():
    try:
        response = requests.get(SERVER_URL)
        response.raise_for_status()
        return response.json()
    except Exception as e:
        print(f"Error: {e}")
        return None

def main_loop():
    print("üîÅ Background loop started")
    while True:
        data = get_server_data()
        if data:
            last_caller = data.get("Last Caller")
            message = data.get("Message", "").strip().lower()
            if last_caller == "Sergey" and message == "–ø–æ–¥–æ–π–¥–∏ –∫–æ –º–Ω–µ":
                print("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç Sergey")
                widget.show()
        time.sleep(10)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
def on_exit(icon, item):
    icon.stop()

# –ú–µ–Ω—é
menu = pystray.Menu(
    pystray.MenuItem("–≤—ã—Ö–æ–¥", on_exit)
)

# –¢—Ä–µ–π-–∏–∫–æ–Ω–∫–∞
icon = pystray.Icon("Neural", img, menu=menu)

# üßµ –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞
threading.Thread(target=main_loop, daemon=True).start()

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
icon.run()
