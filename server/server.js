const express = require("express");
const app = express();
app.use(express.json()); // –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON

const Telegram = {
  api: process.env.TELEGRAM_TOKEN,
  chat: { id: process.env.TELEGRAM_CHAT_ID },
};

let latestMessage = null;
let reset = null; // –ó–¥–µ—Å—å –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è telegram
async function sendToTelegram(user, message) {
  const text = `–°–µ—Ä—ë–≥–∞ —Ö–æ—á–µ—Ç –≤ —Ç—É–±–∑–∏–∫`;
  const url = `https://api.telegram.org/bot${Telegram.api}/sendMessage`;

  const payload = {
    chat_id: process.env.TELEGRAM_CHAT_ID,
    text: text,
    parse_mode: "HTML",
  };

  try {
    const res = await fetch(url, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload),
    });
    const json = await res.json();
    console.log(`Telegram response: ${json}`);
    
  } catch (error) {
    console.error(`Telegram Error: ${error}`);
  }
}

// POST-–∑–∞–ø—Ä–æ—Å –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–≥–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ –∏–ª–∏ —Ç—Ä–µ–π)
app.post("/api/call", async (req, res) => {
  const { user, message } = req.body;

  if (!user || !message) {
    return res.status(400).json({ error: "Missing user or message" });
  }

  latestMessage = { user, message, time: new Date().toISOString() };
  console.log("üì© Message received:", latestMessage);

  res.status(200).json({ status: "ok", received: latestMessage });

  await sendToTelegram(user, message);

  // Reset for 10 sec
  if (reset) clearTimeout(reset);
  reset = setTimeout(() => {
    latestMessage = null;
  }, 30 * 1000);
});

// GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ /
app.get("/", (req, res) => {
  if (latestMessage) {
    res.status(200).json({
      "Server Status": true,
      "Last Caller": latestMessage.user,
      Message: latestMessage.message,
      Time: latestMessage.time,
    });
  } else {
    res.status(200).json({
      "Server Status": true,
      Message: "No messages yet.",
    });
  }
});

// –≠–∫—Å–ø–æ—Ä—Ç serverless-—Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è Vercel
module.exports = app;
